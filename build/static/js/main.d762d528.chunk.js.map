{"version":3,"sources":["Views/TodoItem/TodoChildItem/index.js","Views/Homepage/index.js","App.js","serviceWorker.js","index.js"],"names":["React","memo","listnote","handleRemoveChildetail","useState","additemchild","setAdditemchild","listnotes","setListnotes","isForm","setIsForm","useEffect","OpenFormaddChild","CloseFormaddChild","map","itemnote","indexnote","key","arraylist","itemnotechild","indexnotechild","className","titlechild","type","onClick","ids","noteId","filterchild","el","filter","id","newlistchild","removeChildDetail","Form","Col","sm","FormControl","placeholder","value","onChange","e","target","Button","listchild","push","uuidv4","handleAddItemchilds","list","setList","listSearch","setListSearch","keysearch","setKeysearch","additem","setAdditem","additemdetail","setAdditemDetail","itemdetail","setItemDetail","isSearch","setIsSearch","console","log","removeDetail","listDetail","itemId","lists","noteList","note","filterDetail","ln","listsearchs","filterDetails","newList","nl","newListSearch","newDetail","listFilter","newnote","newArraylist","idNote","localStorage","getItem","onSubmit","preventDefault","result","Fuse","includeScore","keys","search","listResult","item","handleChange","disabled","title","index","itemDetail","setItem","newlist","i","handleClose","items","indexs","titleitem","indexdetail","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d762d528.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Col, Form, FormControl } from 'react-bootstrap';\nimport '../TodoChildItem/style.scss';\nimport { v4 as uuidv4 } from 'uuid';\nconst TodoChildItem = ({ listnote , handleRemoveChildetail})=> {\n    const [additemchild, setAdditemchild] = useState('');\n    const [listnotes, setListnotes] = useState()\n    const [isForm, setIsForm] = useState(false);\n    useEffect(() => {\n        setListnotes([listnote])\n    }, [listnote])\n    // useEffect(()=> {\n    //     setListnotes(listnotes)\n    // },[listnotes])\n    const handleAddItemchilds = (ids) => {\n        const listchild = listnotes.map(el => el.arraylist);\n        if (additemchild) {\n\n            listchild[0].push({ id: uuidv4(), titlechild: additemchild });\n            const newlistchild = listnotes.map(el => {\n                if (el.id === ids) {\n                    return { ...el }\n                }\n                return el;\n            })\n            setListnotes(newlistchild);\n            setAdditemchild('');\n        }\n    }\n    const OpenFormaddChild = () => {\n        setIsForm(true)\n    }\n    const CloseFormaddChild = () => {\n        setIsForm(false)\n    }\n    const removeChildDetail = (ids, noteId) => {\n        const listchild = listnotes.map(el => el.arraylist);\n        const filterchild = listchild[0].filter(el => el.id !== ids);\n        const newlistchild = listnotes.map(el => {\n            if (el.id === noteId) {\n                return { ...el, arraylist: filterchild }\n            }\n            return el;\n        })\n        setListnotes(newlistchild)\n        handleRemoveChildetail(newlistchild,listnote.id)\n    }\n    return (\n        <div>\n            {listnotes ? listnotes.map((itemnote, indexnote) => (\n                <div key={indexnote}>\n                    {itemnote.arraylist ? itemnote.arraylist.map((itemnotechild, indexnotechild) => (\n                        <div className=\"d-flex\" key={indexnotechild}>\n                            <div className=\"w-50 item-detail\">\n                                {itemnotechild.titlechild}\n                            </div>\n                            <button type=\"button\" onClick={() => removeChildDetail(itemnotechild.id, itemnote.id)} className=\"ml-3 pt-4 btn-close\"><i className=\"fas fa-times-circle\"></i></button>\n                        </div>\n                    )) : ''}\n\n                    <button type=\"button\" className=\"icon-add\" onClick={OpenFormaddChild}><i className=\"fas fa-plus-circle\"></i></button>\n                    {isForm === true ?\n                        (<Form className=\"d-flex w-100\">\n                            <Col sm=\"6\" className=\"p-0\">\n                                <FormControl\n                                    placeholder=\"add item\" value={additemchild} onChange={e => setAdditemchild(e.target.value)}\n                                />\n                            </Col>\n\n                            <Button className=\"ml-3\" onClick={() => handleAddItemchilds(itemnote.id)} type=\"button\">Add Item</Button>\n\n                            <button type=\"button\" onClick={CloseFormaddChild} className=\"ml-3 pt-2 btn-close\"><i className=\"fas fa-times-circle\"></i></button>\n                        </Form>) : (\"\")}\n                </div>\n            )) : ''}\n        </div>\n    )\n}                    \nexport default React.memo(TodoChildItem);","import React, { useState } from 'react';\nimport { Button, Col, Form, FormControl } from 'react-bootstrap';\nimport '../Homepage/style.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport TodoChildItem from '../TodoItem/TodoChildItem';\nimport Fuse from 'fuse.js'\nconst Homepage = () => {\n    const [list, setList] = useState();\n    const [listSearch, setListSearch] = useState([]);\n    const [keysearch, setKeysearch] = useState('');\n    const [additem, setAdditem] = useState('');\n    const [additemdetail, setAdditemDetail] = useState('');\n    const [itemdetail, setItemDetail] = useState();\n    const [isSearch,setIsSearch] = useState('')\n   console.log(list);\n    const handleChange= (e) => {\n        setKeysearch(e)\n       if(e === ''){\n        setList(listSearch)\n        setIsSearch('')\n       }\n    }\n    const handleSearch = (e) => {\n        e.preventDefault();\n        setIsSearch(true)\n        if (keysearch !== '' && listSearch!=='') {\n            setIsSearch(true)\n            const options = {\n                includeScore: true,\n                // equivalent to `keys: [['author', 'tags', 'value']]`\n                keys: ['title']\n            }\n            const fuse = new Fuse(listSearch, options)\n            const result = fuse.search(keysearch);\n            const listResult = [];\n            listResult.push(result.map(el => el.item));\n            setList(listResult[0]);\n        }\n        else {\n            setList(listSearch);\n            setIsSearch('')\n        }\n    }\n\n    const handleAdd = (e) => {\n        e.preventDefault();\n        if (additem) {\n           listSearch.push({ id: uuidv4(), title: additem, note: [] });\n          \n            setList(listSearch)\n            setAdditem('');\n            \n        }\n\n    }\n    const handleClose = (ids) => {\n        const newlist = list.filter(i => i.id !== ids)\n        setList(newlist);\n        setListSearch(listSearch.filter(i => i.id !== ids))\n        \n        setItemDetail('')\n    }\n    const gotoDetail = (itemDetail) => {\n        setItemDetail([itemDetail])\n        localStorage.setItem('id', itemDetail.id)\n    }\n    const removeDetail = (listDetail, itemId) => {\n        const lists = [...list]\n        const noteList = itemdetail.map(el => el.note)\n        const filterDetail = noteList[0].filter(ln => ln.id !== listDetail.id);\n        const listsearchs = [...listSearch];\n        const filterDetails = noteList[0].filter(ln => ln.id !== listDetail.id);\n        const newList = lists.map(nl => {\n\n            if (nl.id === itemId) {\n                return { ...nl, note: filterDetail }\n            }\n            return nl;\n        })\n        const newListSearch = listsearchs.map(nl => {\n\n            if (nl.id === itemId) {\n                return { ...nl, note: filterDetails }\n            }\n            return nl;\n        })\n        const newDetail = itemdetail.map(el => {\n            if (el.id === itemId) {\n                return { ...el, note: filterDetail }\n            }\n            return el;\n        })\n        setItemDetail(newDetail);\n        setList(newList)\n        setListSearch(newListSearch)\n\n    }\n\n    const handleAddItem = (e) => {\n        if (additemdetail) {\n            e.push({ id: uuidv4(), titleitem: additemdetail, arraylist: [] });\n            setAdditemDetail('')\n        }\n    }\n\n     const handleRemoveChildetail = (listFilter,ids) => {\n        const lists = [...list]\n        const newnote = lists.map(el => el.note);\n        const newArraylist = listFilter.map(nl=> nl.arraylist)\n        const idNote = localStorage.getItem('id');\n        const newDetail = newnote[0].map(el => {\n            if(el.id === ids){\n                return {...el, arraylist: newArraylist[0] }\n            }\n            return el;\n\n        })\n        const newList = list.map(el => {\n            if(el.id === idNote){\n                return {...el, note: newDetail}\n            }\n            return el;\n        })\n        setList(newList)\n        setListSearch(newList)\n     }\n     \n     \n    return (\n        <div className=\"homepage\">\n\n\n            <div className=\"d-flex\">\n                <div className=\"col-3\">\n                    <div>\n                        <Form onSubmit={handleSearch} className=\"d-flex justify-content-between\">\n                            <Col sm=\"9\" className=\"p-0\">\n                                <FormControl\n                                    placeholder=\"key search\" value={keysearch} onChange={e => handleChange(e.target.value)}\n                                />\n                            </Col>\n\n                            <Button className=\"ml-3\" type=\"submit\">Search</Button>\n\n                        </Form>\n                    </div>\n\n                    <h3 className=\"mt-3 mb-3 note-title\">All Note</h3>\n                    <Form className=\"d-flex justify-content-between w-100\">\n                        <Col sm=\"9\" className=\"p-0\">\n                            <FormControl\n                                placeholder=\"add item\" value={additem} onChange={e => setAdditem(e.target.value)}\n                            />\n                        </Col>\n\n                        {isSearch?<Button className=\"ml-3 \"  type=\"button\" disabled>Add Item</Button>:<Button className=\"ml-3 \"  type=\"button\" onClick={handleAdd}>Add Item</Button>}\n\n                    </Form>\n\n                    <div>\n                        {list ? list.map((item, index) => (\n                            <div key={index} className=\"d-flex w-100\">\n\n                                <Button className=\"notelink\" type=\"button\" onClick={() => gotoDetail(item)}>{item.title}</Button>\n\n                                <button type=\"button\" onClick={() => handleClose(item.id)} className=\"ml-3 pt-3 btn-close\"><i className=\"fas fa-times-circle\"></i></button>\n                            </div>\n\n                        )) : \"\"}\n                    </div>\n                </div>\n                <div className=\"col-6\">\n\n                    {itemdetail ? itemdetail.map((items, indexs) => (\n                        <div key={indexs}>\n                            <h3 className=\"note-title\">Note (<span>{items.title}</span>)</h3>\n                            <div className=\"d-flex mt-3\">\n                                <Form className=\"d-flex w-100 justify-content-between\">\n                                    <Col sm=\"10\" className=\"p-0\">\n                                        <FormControl\n                                            placeholder=\"add item\" value={additemdetail} onChange={e => setAdditemDetail(e.target.value)}\n                                        />\n                                    </Col>\n\n                                    <Button className=\"\" onClick={() => handleAddItem(items.note)} type=\"button\">Add Item</Button>\n                                </Form>\n                            </div>\n                            <div className=\"w-100\">\n                                {items.note ? items.note.map((itemdetail, indexdetail) => (\n                                    <div key={indexdetail} className=\"div-item-detail\">\n                                        <div className=\"d-flex\">\n                                            <div className=\"w-50 item-detail\">\n                                                {itemdetail.titleitem}\n                                            </div>\n                                            <button type=\"button\" onClick={() => removeDetail(itemdetail, items.id)} className=\"ml-3 pt-4 btn-close\"><i className=\"fas fa-times-circle\"></i></button>\n                                        </div>\n                                        {/* {itemdetail ? itemdetail.map((itemchild, indexchild) => (\n                                            <div className=\"item-detail w-50\" key={indexchild}>{itemchild.valuechilds}</div>\n                                        )) : ''} */}\n                                        <TodoChildItem listnote={itemdetail} handleRemoveChildetail={handleRemoveChildetail}/>\n                                    </div>\n                                )) : ''}\n\n                            </div>\n                        </div>\n                    )) : \"\"}\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default React.memo(Homepage) \n","import React from 'react';\nimport './App.css';\nimport Homepage from './Views/Homepage';\nimport '../src/style.scss'\nfunction App() {\n  return (\n  \n     <Homepage />\n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}