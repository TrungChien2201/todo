{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabbi\\\\todo\\\\src\\\\Views\\\\TodoItem\\\\TodoChildItem\\\\index.js\";\nimport React, { useState } from 'react';\nimport { Button, Col, Form, FormControl } from 'react-bootstrap';\nimport '../TodoChildItem/style.scss';\nimport { v4 as uuidv4 } from 'uuid';\nexport default function TodoChildItem({\n  listnote,\n  handleRemoveChildetail\n}) {\n  const [additemchild, setAdditemchild] = useState('');\n  const [listnotes, setListnotes] = useState([listnote]);\n  const [isForm, setIsForm] = useState(false);\n\n  const handleAddItemchilds = ids => {\n    const listchild = listnotes.map(el => el.arraylist);\n\n    if (additemchild) {\n      listchild[0].push({\n        id: uuidv4(),\n        titlechild: additemchild\n      });\n      setAdditemchild('');\n      const newlistchild = listnotes.map(el => {\n        console.log(el);\n\n        if (el.id === ids) {\n          console.log('f');\n          return { ...el\n          };\n        }\n\n        return el;\n      });\n      setListnotes(newlistchild);\n    }\n  };\n\n  const OpenFormaddChild = () => {\n    setIsForm(true);\n  };\n\n  const CloseFormaddChild = () => {\n    setIsForm(false);\n  };\n\n  const removeChildDetail = (ids, noteId) => {\n    const listchild = listnotes.map(el => el.arraylist);\n    const filterchild = listchild[0].filter(el => el.id !== ids);\n    const newlistchild = listnotes.map(el => {\n      if (el.id === noteId) {\n        return { ...el,\n          arraylist: filterchild\n        };\n      }\n\n      return el;\n    });\n    setListnotes(newlistchild); //    handleRemoveChildetail(filterchild,noteId)\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, listnotes ? listnotes.map((itemnote, indexnote) => /*#__PURE__*/React.createElement(\"div\", {\n    key: indexnote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, itemnote.arraylist ? itemnote.arraylist.map((itemnotechild, indexnotechild) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    key: indexnotechild,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 item-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, itemnotechild.titlechild), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    type: \"button\",\n    onClick: () => removeChildDetail(itemnotechild.id, itemnote.id),\n    className: \"ml-3 pt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 142\n    }\n  })))) : '', /*#__PURE__*/React.createElement(\"a\", {\n    type: \"button\",\n    className: \"icon-add\",\n    onClick: OpenFormaddChild,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 86\n    }\n  })), isForm === true ? /*#__PURE__*/React.createElement(Form, {\n    className: \"d-flex w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    placeholder: \"add item\",\n    value: additemchild,\n    onChange: e => setAdditemchild(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"ml-3\",\n    onClick: () => handleAddItemchilds(itemnote.id),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"Add Item\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    type: \"button\",\n    onClick: CloseFormaddChild,\n    className: \"ml-3 pt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 105\n    }\n  }))) : \"\")) : '');\n}","map":{"version":3,"sources":["C:/Users/Fabbi/todo/src/Views/TodoItem/TodoChildItem/index.js"],"names":["React","useState","Button","Col","Form","FormControl","v4","uuidv4","TodoChildItem","listnote","handleRemoveChildetail","additemchild","setAdditemchild","listnotes","setListnotes","isForm","setIsForm","handleAddItemchilds","ids","listchild","map","el","arraylist","push","id","titlechild","newlistchild","console","log","OpenFormaddChild","CloseFormaddChild","removeChildDetail","noteId","filterchild","filter","itemnote","indexnote","itemnotechild","indexnotechild","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Col, Form, FormControl } from 'react-bootstrap';\nimport '../TodoChildItem/style.scss';\nimport { v4 as uuidv4 } from 'uuid';\nexport default function TodoChildItem({ listnote ,handleRemoveChildetail}) {\n    const [additemchild, setAdditemchild] = useState('');\n    const [listnotes, setListnotes] = useState([listnote])\n    const [isForm, setIsForm] = useState(false);\n    const handleAddItemchilds = (ids) => {\n        const listchild = listnotes.map(el => el.arraylist);\n        if (additemchild) {\n            \n           listchild[0].push({ id: uuidv4(), titlechild: additemchild });\n            setAdditemchild('');\n            const newlistchild = listnotes.map(el => {\n                console.log(el);\n                if (el.id === ids) {\n                    console.log('f');\n                    return { ...el}\n                }\n                return el;\n            })\n            setListnotes(newlistchild);\n        }\n\n    }\n    const OpenFormaddChild = () => {\n        setIsForm(true)\n    }\n    const CloseFormaddChild = () => {\n        setIsForm(false)\n    }\n    const removeChildDetail = (ids, noteId) => {\n        const listchild = listnotes.map(el => el.arraylist);\n        const filterchild = listchild[0].filter(el => el.id !== ids);\n        const newlistchild = listnotes.map(el => {\n            if (el.id === noteId) {\n                return { ...el, arraylist: filterchild }\n            }\n            return el;\n        })\n        setListnotes(newlistchild)\n    //    handleRemoveChildetail(filterchild,noteId)\n\n    }\n    return (\n        <div>\n            {listnotes ? listnotes.map((itemnote, indexnote) => (\n\n\n                <div key={indexnote}>\n                    {itemnote.arraylist ? itemnote.arraylist.map((itemnotechild, indexnotechild) => (\n                        <div className=\"d-flex\" key={indexnotechild}>\n                            <div className=\"w-50 item-detail\">\n                                {itemnotechild.titlechild}\n                            </div>\n                            <a href=\"#\" type=\"button\" onClick={() => removeChildDetail(itemnotechild.id, itemnote.id)} className=\"ml-3 pt-4\"><i className=\"fas fa-times-circle\"></i></a>\n                        </div>\n                    )) : ''}\n\n                    <a type=\"button\" className=\"icon-add\" onClick={OpenFormaddChild}><i className=\"fas fa-plus-circle\"></i></a>\n                    {isForm === true ?\n                        (<Form className=\"d-flex w-100\">\n                            <Col sm=\"6\" className=\"p-0\">\n                                <FormControl\n                                    placeholder=\"add item\" value={additemchild} onChange={e => setAdditemchild(e.target.value)}\n                                />\n                            </Col>\n\n                            <Button className=\"ml-3\" onClick={() => handleAddItemchilds(itemnote.id)} type=\"button\">Add Item</Button>\n\n                            <a href=\"#\" type=\"button\" onClick={CloseFormaddChild} className=\"ml-3 pt-2\"><i className=\"fas fa-times-circle\"></i></a>\n                        </Form>) : (\"\")}\n                </div>\n            )) : ''}\n\n        </div>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}